import React, { useState } from 'react'
import { getCsrfToken } from "next-auth/react"
import { getProviders, signIn } from "next-auth/react"
import { signOut, getSession } from "next-auth/react"
import { useRouter } from "next/router";
import Head from 'next/head'
import { BeatLoader } from 'react-spinners';
import Link from 'next/link'
function SingUp() {

    const router = useRouter()

    const [email, setemail] = useState('')
    const [password, setpassword] = useState('')
    const [confirmPassword, setconfirmPassword] = useState('')
    const [name, setname] = useState('second')
    const [message, setmessage] = useState(null)
    const [loading, setloading] = useState(false)


    const [account_type, setaccount_type] = useState('User')
    console.log(account_type);


    const signUpUser = async (e) => {
        e.preventDefault()
        setloading(true)

        let options = { redirect: false, email, password, account_type }
        setmessage(null)
        const res = await fetch('/api/auth/register', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ name, email, password, account_type })
        })

        const data = await res.json()


        if (data.message === "Resgistered Sucessfully") {
            setmessage('Resgistered Sucessfully')
            const res = await signIn('credentials', options)
            const json = await res.json
            if (res.error) {
                setmessage(res.error)
            } else {
                console.log(data);
                router.push('/')
            }
        }
        if (data.message === 'Already Resgistered') {
            setmessage('Already Resgistered, Go to Login page')
            // router.push('/signin')
        }
        setloading(false)

    }

    return (
        <div className=" sm:w-4/5 md:w-3/5 lg:w-4/12 mx-auto flex items-center justify-center py-12 px-4  border-2 ">

            <Head>
                <title>Baldgenie - Services at your doorsteps</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className="space-y-8   m-2 my-4   ">
                <div>
                    <div className='w-2/5     mx-auto m-2 my-4'>

                        <img
                            onClick={() => router.push('/')}

                            className=''
                            alt='loading'
                            src='/baldgenie.png'>
                        </img>
                    </div>
                    <h2 className="mt-6 text-center text-2xl font-bold text-gray-900">Sign Up</h2>
                    <p className="mt-2 text-center text-sm text-gray-600">
                    </p>
                </div>
                <htmlForm className="mt-8 space-y-6" action="#" method="POST">
                    <input type="hidden" name="remember" value="true" />

                    <div className="rounded-md shadow-sm -space-y-px">
                        <div>
                            <label htmlFor="name" className="sr-only">Full Name</label>
                            <input onChange={e => setname(e.target.value)} id="name" name="name" type="text" autoComplete="name" required className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm" placeholder="Full Name" />
                        </div>
                        <div>
                            <label htmlFor="email-address" className="sr-only">Email address</label>
                            <input onChange={e => setemail(e.target.value)} id="email-address" name="email" type="email" required className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm" placeholder="Email address" />
                        </div>
                        <div>
                            <label htmlFor="password" className="sr-only">Password</label>
                            <input onChange={e => setpassword(e.target.value)} id="password" name="password" type="password" required className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm" placeholder="Password" />
                        </div>
                        <div>
                            <label htmlFor="confirmPassword" className="sr-only">Confirm Password</label>
                            <input onChange={e => setconfirmPassword(e.target.value)} id="confirmPassword" name="confirmPassword" type="password" required className="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm" placeholder="Confirm Password" />
                        </div>
                    </div>
                    <div className="flex">
                        {/* <h1 className="text-red-500 font-semibold mr-2">Signup As</h1> */}
                        <select className='grow  py-2 px-4 text-sm scrollbar-hide  outline-none border-2 font-bold border-gray-300 rounded' value={account_type} onChange={e => { setaccount_type(e.target.value) }} >
                            <option className='font-semibold py-4'>User</option>
                            <option className='font-semibold py-4'>Merchant</option>

                        </select>
                    </div>

                    <div>

                        <button onClick={(e) => {
                            if (password && confirmPassword) {
                                if (password != confirmPassword) {
                                    setmessage("Password Not Matched")
                                    return
                                }
                            }
                            if (!email || !password || !name) {
                                setmessage("Fill all Details")
                                return
                            }
                            if (!email.includes('@')) {
                                setmessage("Enter Correct Email")
                                return
                            }
                            signUpUser(e)
                        }} type="submit" className="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-theme hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            <span className="absolute left-0 inset-y-0 flex items-center pl-3">
                                <svg className="h-5 w-5 text-indigo-500 group-hover:text-indigo-400" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                    <path fillRule="evenodd" d="M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z" clipRule="evenodd" />
                                </svg>
                            </span>
                            Sign Up
                        </button>

                        {!loading && message &&
                            < p className="text-red font-semibold m-3 text-red-500 text-center ">{message}</p>
                        }


                        <div className={`${loading ? "" : "hidden"} w-20 mx-auto my-2 `}>
                            <BeatLoader loading size={10} color={'blue'} />
                        </div>


                        <div className="text-grey-dark mt-6">
                            Already have an account?
                            <Link href='/signin'>
                                <a className="ml-1  font-semibold hover:text-red-500 underline border-b border-blue text-blue" >
                                    Log in
                                </a>
                            </Link>
                        </div>


                    </div>
                </htmlForm>
            </div>
        </div>
    )
}
export default SingUp